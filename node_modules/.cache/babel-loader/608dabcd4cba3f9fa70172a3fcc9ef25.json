{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getCountriesAsync = createAsyncThunk(\"countries,getCountriesAsync\", async () => {\n  const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n  return await response.data;\n});\nexport const countriesSlice = createSlice({\n  name: \"countries\",\n  initialState: {\n    items: [],\n    selectedCountry: {\n      name: \"Turkey\",\n      topLevelDomain: [\".tr\"],\n      alpha2Code: \"TR\",\n      alpha3Code: \"TUR\",\n      callingCodes: [\"90\"],\n      capital: \"Ankara\",\n      altSpellings: [\"TR\", \"Turkiye\", \"Republic of Turkey\", \"Türkiye Cumhuriyeti\"],\n      region: \"Asia\",\n      subregion: \"Western Asia\",\n      population: 78741053,\n      latlng: [39.0, 35.0],\n      demonym: \"Turkish\",\n      area: 783562.0,\n      gini: 39.0,\n      timezones: [\"UTC+03:00\"],\n      borders: [\"ARM\", \"AZE\", \"BGR\", \"GEO\", \"GRC\", \"IRN\", \"IRQ\", \"SYR\"],\n      nativeName: \"Türkiye\",\n      numericCode: \"792\",\n      currencies: [{\n        code: \"TRY\",\n        name: \"Turkish lira\",\n        symbol: null\n      }],\n      languages: [{\n        iso639_1: \"tr\",\n        iso639_2: \"tur\",\n        name: \"Turkish\",\n        nativeName: \"Türkçe\"\n      }],\n      translations: {\n        de: \"Türkei\",\n        es: \"Turquía\",\n        fr: \"Turquie\",\n        ja: \"トルコ\",\n        it: \"Turchia\",\n        br: \"Turquia\",\n        pt: \"Turquia\",\n        nl: \"Turkije\",\n        hr: \"Turska\",\n        fa: \"ترکیه\"\n      },\n      flag: \"https://restcountries.eu/data/tur.svg\",\n      regionalBlocs: [],\n      cioc: \"TUR\"\n    }\n  },\n  reducers: {\n    setSelectedCountry: (state, action) => {\n      state.selectedCountry = action.payload;\n    }\n  },\n  extraReducers: {\n    //get countries\n    [getCountriesAsync.fulfilled]: (state, action) => {\n      state.items = action.payload;\n    }\n  }\n});\nexport const {\n  setSelectedCountry\n} = countriesSlice.actions;\nexport default countriesSlice.reducer;","map":{"version":3,"sources":["C:/reactcamp/react-tutorial/src/redux/countries/countriesSlice.js"],"names":["createAsyncThunk","createSlice","axios","getCountriesAsync","response","get","data","countriesSlice","name","initialState","items","selectedCountry","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","latlng","demonym","area","gini","timezones","borders","nativeName","numericCode","currencies","code","symbol","languages","iso639_1","iso639_2","translations","de","es","fr","ja","it","br","pt","nl","hr","fa","flag","regionalBlocs","cioc","reducers","setSelectedCountry","state","action","payload","extraReducers","fulfilled","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getCountriesAsync = createAsyncThunk(\r\n  \"countries,getCountriesAsync\",\r\n  async () => {\r\n    const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n    return await response.data;\r\n  }\r\n);\r\n\r\nexport const countriesSlice = createSlice({\r\n  name: \"countries\",\r\n  initialState: {\r\n    items: [],\r\n    selectedCountry: {\r\n      name: \"Turkey\",\r\n      topLevelDomain: [\".tr\"],\r\n      alpha2Code: \"TR\",\r\n      alpha3Code: \"TUR\",\r\n      callingCodes: [\"90\"],\r\n      capital: \"Ankara\",\r\n      altSpellings: [\r\n        \"TR\",\r\n        \"Turkiye\",\r\n        \"Republic of Turkey\",\r\n        \"Türkiye Cumhuriyeti\",\r\n      ],\r\n      region: \"Asia\",\r\n      subregion: \"Western Asia\",\r\n      population: 78741053,\r\n      latlng: [39.0, 35.0],\r\n      demonym: \"Turkish\",\r\n      area: 783562.0,\r\n      gini: 39.0,\r\n      timezones: [\"UTC+03:00\"],\r\n      borders: [\"ARM\", \"AZE\", \"BGR\", \"GEO\", \"GRC\", \"IRN\", \"IRQ\", \"SYR\"],\r\n      nativeName: \"Türkiye\",\r\n      numericCode: \"792\",\r\n      currencies: [{ code: \"TRY\", name: \"Turkish lira\", symbol: null }],\r\n      languages: [\r\n        {\r\n          iso639_1: \"tr\",\r\n          iso639_2: \"tur\",\r\n          name: \"Turkish\",\r\n          nativeName: \"Türkçe\",\r\n        },\r\n      ],\r\n      translations: {\r\n        de: \"Türkei\",\r\n        es: \"Turquía\",\r\n        fr: \"Turquie\",\r\n        ja: \"トルコ\",\r\n        it: \"Turchia\",\r\n        br: \"Turquia\",\r\n        pt: \"Turquia\",\r\n        nl: \"Turkije\",\r\n        hr: \"Turska\",\r\n        fa: \"ترکیه\",\r\n      },\r\n      flag: \"https://restcountries.eu/data/tur.svg\",\r\n      regionalBlocs: [],\r\n      cioc: \"TUR\",\r\n    },\r\n  },\r\n  reducers: {\r\n    setSelectedCountry: (state, action) => {\r\n      state.selectedCountry = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get countries\r\n    [getCountriesAsync.fulfilled]: (state, action) => {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSelectedCountry } = countriesSlice.actions;\r\nexport default countriesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}