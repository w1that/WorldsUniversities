{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport UniversityService from \"../../service/UniversityService\";\nconst universityService = new UniversityService();\nexport const universitiesSlice = createSlice({\n  name: \"universities\",\n  initialState: {\n    universities: []\n  },\n  reducers: {\n    setUniversitiesByCountryName: (state, action) => {\n      universityService.getUniversitiesByCountry(action.payload).then(response => response.data.map(university => state.universities.push(university)));\n    }\n  }\n});\nexport const {\n  setUniversitiesByCountryName\n} = universitiesSlice.actions;\nexport default universitiesSlice.reducer;","map":{"version":3,"sources":["C:/reactcamp/react-tutorial/src/redux/universities/universitiesSlice.js"],"names":["createSlice","UniversityService","universityService","universitiesSlice","name","initialState","universities","reducers","setUniversitiesByCountryName","state","action","getUniversitiesByCountry","payload","then","response","data","map","university","push","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,MAAMC,iBAAiB,GAAG,IAAID,iBAAJ,EAA1B;AAEA,OAAO,MAAME,iBAAiB,GAAGH,WAAW,CAAC;AAC3CI,EAAAA,IAAI,EAAE,cADqC;AAE3CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE;AADF,GAF6B;AAK3CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,4BAA4B,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/CR,MAAAA,iBAAiB,CACdS,wBADH,CAC4BD,MAAM,CAACE,OADnC,EAEGC,IAFH,CAESC,QAAD,IACJA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,UAAD,IAAgBR,KAAK,CAACH,YAAN,CAAmBY,IAAnB,CAAwBD,UAAxB,CAAlC,CAHJ;AAKD;AAPO;AALiC,CAAD,CAArC;AAgBP,OAAO,MAAM;AAAET,EAAAA;AAAF,IAAmCL,iBAAiB,CAACgB,OAA3D;AACP,eAAehB,iBAAiB,CAACiB,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport UniversityService from \"../../service/UniversityService\";\r\n\r\nconst universityService = new UniversityService();\r\n\r\nexport const universitiesSlice = createSlice({\r\n  name: \"universities\",\r\n  initialState: {\r\n    universities: [],\r\n  },\r\n  reducers: {\r\n    setUniversitiesByCountryName: (state, action) => {\r\n      universityService\r\n        .getUniversitiesByCountry(action.payload)\r\n        .then((response) =>\r\n          response.data.map((university) => state.universities.push(university))\r\n        );\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUniversitiesByCountryName } = universitiesSlice.actions;\r\nexport default universitiesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}