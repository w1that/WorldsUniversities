{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactcamp\\\\react-tutorial\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, FormControl, Image, InputGroup, ListGroup } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountriesAsync } from \"../redux/countries/countriesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isFocused, setIsFocused] = useState(false);\n  const [countryId, setCountryId] = useState(0);\n  useEffect(() => {\n    dispatch(getCountriesAsync());\n  }, [dispatch]);\n  const countries = useSelector(state => state.countries.items);\n\n  const focusHandler = () => {\n    setIsFocused(true);\n  };\n\n  const blurHandler = () => {\n    setIsFocused(false);\n  };\n\n  const countrySelectHandler = () => {\n    setCountryId(country.numericCode);\n    console.log(countryId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Recipient's username\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        onFocus: focusHandler,\n        onBlur: blurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"ara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: countries && isFocused ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          maxHeight: \"10rem\",\n          overflow: \"auto\"\n        },\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          onClick: countrySelectHandler,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            border: \"1px solid\",\n            width: \"20rem\",\n            src: country.flag,\n            rounded: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \" \", country.name]\n        }, country.numericCode, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"SNhMcUXt96iXWdtxjvk4WUiNSJ4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/reactcamp/react-tutorial/src/components/SearchBar.js"],"names":["React","useEffect","useState","Button","FormControl","Image","InputGroup","ListGroup","useDispatch","useSelector","getCountriesAsync","SearchBar","dispatch","isFocused","setIsFocused","countryId","setCountryId","countries","state","items","focusHandler","blurHandler","countrySelectHandler","country","numericCode","console","log","marginTop","marginBottom","border","maxHeight","overflow","map","flag","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,UAArC,EAAiDC,SAAjD,QAAkE,iBAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACF,iBAAiB,EAAlB,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,QAAMK,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,SAAN,CAAgBE,KAA5B,CAA7B;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAMO,WAAW,GAAG,MAAM;AACxBP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMQ,oBAAoB,GAAC,MAAI;AAC7BN,IAAAA,YAAY,CAACO,OAAO,CAACC,WAAT,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,WAAW,EAAC,sBADd;AAEE,sBAAW,sBAFb;AAGE,4BAAiB,cAHnB;AAIE,QAAA,OAAO,EAAEP,YAJX;AAKE,QAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAQyC,GARzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEO,QAAAA,YAAY,EAAE;AAAhB,OAAlB;AAAA,gBACGX,SAAS,IAAIJ,SAAb,gBACC;AACE,QAAA,KAAK,EAAE;AACLgB,UAAAA,MAAM,EAAE,iBADH;AAELC,UAAAA,SAAS,EAAE,OAFN;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SADT;AAAA,kBAOGd,SAAS,CAACe,GAAV,CAAeT,OAAD,iBACb,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,OAAO,EAAED,oBAAzB;AAAA,kCACA,QAAC,KAAD;AAAO,YAAA,MAAM,EAAC,WAAd;AAA0B,YAAA,KAAK,EAAC,OAAhC;AAAwC,YAAA,GAAG,EAAEC,OAAO,CAACU,IAArD;AAA2D,YAAA,OAAO;AAAlE;AAAA;AAAA;AAAA;AAAA,kBADA,OACuEV,OAAO,CAACW,IAD/E;AAAA,WAAoDX,OAAO,CAACC,WAA5D;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA,cADD,GAgBC;AAjBJ;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAvDuBb,S;UACLH,W,EAOCC,W;;;KARIE,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, FormControl, Image, InputGroup, ListGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountriesAsync } from \"../redux/countries/countriesSlice\";\r\n\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [countryId, setCountryId] = useState(0)\r\n  useEffect(() => {\r\n    dispatch(getCountriesAsync());\r\n  }, [dispatch]);\r\n\r\n  const countries = useSelector((state) => state.countries.items);\r\n\r\n  const focusHandler = () => {\r\n    setIsFocused(true);\r\n  };\r\n  const blurHandler = () => {\r\n    setIsFocused(false);\r\n  };\r\n  const countrySelectHandler=()=>{\r\n    setCountryId(country.numericCode)\r\n    console.log(countryId)\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Recipient's username\"\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n          onFocus={focusHandler}\r\n          onBlur={blurHandler}\r\n        />\r\n        <Button variant=\"primary\">ara</Button>{\" \"}\r\n      </InputGroup>\r\n      <ListGroup style={{ marginBottom: \"10px\" }}>\r\n        {countries && isFocused ? (\r\n          <div\r\n            style={{\r\n              border: \"1px solid black\",\r\n              maxHeight: \"10rem\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            {countries.map((country) => (\r\n              <ListGroup.Item onClick={countrySelectHandler} key={country.numericCode} >\r\n              <Image border=\"1px solid\" width=\"20rem\" src={country.flag} rounded /> {country.name} \r\n              </ListGroup.Item>\r\n              \r\n            ))}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}