{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactcamp\\\\react-tutorial\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, FormControl, Image, InputGroup, ListGroup } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountriesAsync } from \"../redux/countries/countriesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isFocused, setIsFocused] = useState(false);\n  const [enteredCountry, setEnteredCountry] = useState(\"\");\n  useEffect(() => {\n    dispatch(getCountriesAsync());\n  }, [dispatch]);\n  const countries = useSelector(state => state.countries.items);\n\n  const focusHandler = () => {\n    setTimeout(() => {\n      setIsFocused(true);\n    }, 200);\n  };\n\n  const blurHandler = () => {\n    setTimeout(() => {\n      setIsFocused(false);\n    }, 200);\n    setEnteredCountry(\"\");\n  };\n\n  const inputChangeHandler = e => {\n    setEnteredCountry(e.target.value);\n  };\n\n  const onClickHandler = (country, e) => {\n    console.log(country);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      onChange: inputChangeHandler,\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Search a country\",\n        value: enteredCountry,\n        \"aria-describedby\": \"basic-addon2\",\n        onFocus: focusHandler,\n        onBlur: blurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"ara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: countries && isFocused ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          maxHeight: \"10rem\",\n          overflow: \"auto\"\n        },\n        children: !enteredCountry ? countries.map(country => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: e => onClickHandler(country, e),\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              border: \"1px solid\",\n              width: \"20rem\",\n              src: country.flag,\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), \" \", country.name]\n          }, country.numericCode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)) : countries.filter(country => country.name.toLowerCase().includes(enteredCountry.toLowerCase())).map(country => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: e => console.log(\"filtreli console\"),\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              border: \"1px solid\",\n              width: \"20rem\",\n              src: country.flag,\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), \" \", country.name]\n          }, country.numericCode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"UKLwEpF8Hb/m8NcPBfr1atuLdbo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/reactcamp/react-tutorial/src/components/SearchBar.js"],"names":["React","useEffect","useState","Button","FormControl","Image","InputGroup","ListGroup","useDispatch","useSelector","getCountriesAsync","SearchBar","dispatch","isFocused","setIsFocused","enteredCountry","setEnteredCountry","countries","state","items","focusHandler","setTimeout","blurHandler","inputChangeHandler","e","target","value","onClickHandler","country","console","log","preventDefault","marginTop","marginBottom","border","maxHeight","overflow","map","flag","name","numericCode","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Image,\r\n  InputGroup,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountriesAsync } from \"../redux/countries/countriesSlice\";\r\n\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [enteredCountry, setEnteredCountry] = useState(\"\");\r\n  useEffect(() => {\r\n    dispatch(getCountriesAsync());\r\n  }, [dispatch]);\r\n\r\n  const countries = useSelector((state) => state.countries.items);\r\n\r\n  const focusHandler = () => {\r\n    setTimeout(() => {\r\n      setIsFocused(true);\r\n    }, 200);\r\n  };\r\n  const blurHandler = () => {\r\n    setTimeout(() => {\r\n      setIsFocused(false);\r\n    }, 200);\r\n    setEnteredCountry(\"\");\r\n  };\r\n  const inputChangeHandler = (e) => {\r\n    setEnteredCountry(e.target.value);\r\n  };\r\n  const onClickHandler = (country,e) => {\r\n    console.log(country);\r\n    e.preventDefault()\r\n  };\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <InputGroup onChange={inputChangeHandler} className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Search a country\"\r\n          value={enteredCountry}\r\n          aria-describedby=\"basic-addon2\"\r\n          onFocus={focusHandler}\r\n          onBlur={blurHandler}\r\n        />\r\n        <Button variant=\"primary\">ara</Button>{\" \"}\r\n      </InputGroup>\r\n      <ListGroup style={{ marginBottom: \"10px\" }}>\r\n        {countries && isFocused ? (\r\n          <div\r\n            style={{\r\n              border: \"1px solid black\",\r\n              maxHeight: \"10rem\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            {!enteredCountry\r\n              ? countries.map((country) => (\r\n                  <a href={\"/#\"}>\r\n                    {\" \"}\r\n                    <ListGroup.Item\r\n                      onClick={(e) => onClickHandler(country,e)}\r\n                      key={country.numericCode}\r\n                    >\r\n                      <Image\r\n                        border=\"1px solid\"\r\n                        width=\"20rem\"\r\n                        src={country.flag}\r\n                        rounded\r\n                      />{\" \"}\r\n                      {country.name}\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                ))\r\n              : countries\r\n                  .filter((country) =>\r\n                    country.name\r\n                      .toLowerCase()\r\n                      .includes(enteredCountry.toLowerCase())\r\n                  )\r\n                  .map((country) => (\r\n                    <a href=\"/#\">\r\n                      {\" \"}\r\n                      <ListGroup.Item onClick={(e)=>console.log(\"filtreli console\")} key={country.numericCode}>\r\n                        <Image\r\n                          border=\"1px solid\"\r\n                          width=\"20rem\"\r\n                          src={country.flag}\r\n                          rounded\r\n                        />{\" \"}\r\n                        {country.name}\r\n                      </ListGroup.Item>\r\n                    </a>\r\n                  ))}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}