{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport UniversityService from \"../../service/UniversityService\";\nconst universityService = new UniversityService();\nexport const universitiesSlice = createSlice({\n  name: \"universities\",\n  initialState: {\n    universities: []\n  },\n  reducers: {\n    setUniversitiesByCountryName: (state, action) => {\n      try {\n        universityService.getUniversitiesByCountry(action.payload).then(response => response.data.map(university => state.universities.push(university)));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n});\nexport const {\n  setUniversitiesByCountryName\n} = universitiesSlice.actions;\nexport default universitiesSlice.reducer;","map":{"version":3,"sources":["C:/reactcamp/react-tutorial/src/redux/universities/universitiesSlice.js"],"names":["createSlice","UniversityService","universityService","universitiesSlice","name","initialState","universities","reducers","setUniversitiesByCountryName","state","action","getUniversitiesByCountry","payload","then","response","data","map","university","push","error","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,MAAMC,iBAAiB,GAAG,IAAID,iBAAJ,EAA1B;AAEA,OAAO,MAAME,iBAAiB,GAAGH,WAAW,CAAC;AACzCI,EAAAA,IAAI,EAAC,cADoC;AAEzCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,YAAY,EAAC;AADJ,GAF4B;AAKzCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,4BAA4B,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC1C,UAAI;AACAR,QAAAA,iBAAiB,CAACS,wBAAlB,CAA2CD,MAAM,CAACE,OAAlD,EAA2DC,IAA3D,CAAgEC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,UAAU,IAAER,KAAK,CAACH,YAAN,CAAmBY,IAAnB,CAAwBD,UAAxB,CAA9B,CAA1E;AAEH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AARI;AALgC,CAAD,CAArC;AAiBP,OAAO,MAAM;AAACX,EAAAA;AAAD,IAAiCL,iBAAiB,CAACmB,OAAzD;AACP,eAAenB,iBAAiB,CAACoB,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport UniversityService from \"../../service/UniversityService\";\r\n\r\nconst universityService = new UniversityService()\r\n\r\nexport const universitiesSlice = createSlice({\r\n    name:\"universities\",\r\n    initialState:{\r\n        universities:[],\r\n    },\r\n    reducers:{\r\n        setUniversitiesByCountryName: (state,action)=>{\r\n            try {\r\n                universityService.getUniversitiesByCountry(action.payload).then(response=>response.data.map(university=>state.universities.push(university)))\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setUniversitiesByCountryName} = universitiesSlice.actions\r\nexport default universitiesSlice.reducer"]},"metadata":{},"sourceType":"module"}